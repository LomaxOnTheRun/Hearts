   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
        1    0.000    0.000  222.467  222.467 <string>:1(<module>)
        4    0.000    0.000    0.000    0.000 <string>:16(_make)
       51    0.000    0.000    0.000    0.000 __init__.py:1357(log)
       51    0.000    0.000    0.000    0.000 __init__.py:1528(getEffectiveLevel)
       51    0.000    0.000    0.000    0.000 __init__.py:1542(isEnabledFor)
        9    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:657(get)
     1000    0.002    0.000    0.002    0.000 _internal.py:241(__init__)
     1000    0.000    0.000    0.000    0.000 _internal.py:266(get_data)
       38    0.000    0.000    0.001    0.000 _methods.py:34(_prod)
        7    0.000    0.000    0.000    0.000 _methods.py:40(_all)
     1000    0.002    0.000    0.003    0.000 _methods.py:43(_count_reduce_items)
     1000    0.011    0.000    0.028    0.000 _methods.py:53(_mean)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        6    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       32    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
   670808    0.770    0.000    0.770    0.000 _weakrefset.py:70(__contains__)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
   335420    1.019    0.000    1.789    0.000 abc.py:178(__instancecheck__)
      9/2    0.000    0.000    0.000    0.000 abc.py:194(__subclasscheck__)
        4    0.000    0.000    0.000    0.000 array_grad.py:459(_IdGrad)
        4    0.000    0.000    0.003    0.001 array_ops.py:114(identity)
       20    0.000    0.000    0.014    0.001 array_ops.py:249(shape)
       20    0.000    0.000    0.014    0.001 array_ops.py:274(shape_internal)
        2    0.000    0.000    0.001    0.000 array_ops.py:302(size)
        2    0.000    0.000    0.001    0.000 array_ops.py:328(size_internal)
        1    0.000    0.000    0.000    0.000 array_ops.py:938(_get_dtype_from_nested_lists)
        1    0.000    0.000    0.000    0.000 array_ops.py:959(_autopacking_conversion_function)
   334565    0.500    0.000    1.079    0.000 c_api_util.py:29(__init__)
   334565    0.678    0.000    1.085    0.000 c_api_util.py:32(__del__)
      500    0.001    0.000    0.002    0.000 callbacks.py:118(on_train_begin)
      500    0.001    0.000    0.001    0.000 callbacks.py:128(on_train_end)
      500    0.000    0.000    0.001    0.000 callbacks.py:138(__iter__)
     1000    0.001    0.000    0.001    0.000 callbacks.py:169(__init__)
     1000    0.000    0.000    0.000    0.000 callbacks.py:173(set_params)
     1000    0.000    0.000    0.000    0.000 callbacks.py:176(set_model)
      500    0.000    0.000    0.000    0.000 callbacks.py:179(on_epoch_begin)
     1000    0.000    0.000    0.000    0.000 callbacks.py:185(on_batch_begin)
      500    0.000    0.000    0.000    0.000 callbacks.py:188(on_batch_end)
      500    0.000    0.000    0.000    0.000 callbacks.py:191(on_train_begin)
     1000    0.000    0.000    0.000    0.000 callbacks.py:194(on_train_end)
      500    0.000    0.000    0.000    0.000 callbacks.py:204(on_epoch_begin)
      500    0.017    0.000    0.017    0.000 callbacks.py:208(on_batch_end)
      500    0.002    0.000    0.002    0.000 callbacks.py:219(on_epoch_end)
      500    0.001    0.000    0.001    0.000 callbacks.py:318(on_train_begin)
      500    0.002    0.000    0.003    0.000 callbacks.py:322(on_epoch_end)
      500    0.001    0.000    0.001    0.000 callbacks.py:34(__init__)
      500    0.000    0.000    0.000    0.000 callbacks.py:36(<listcomp>)
      500    0.001    0.000    0.001    0.000 callbacks.py:42(set_params)
      500    0.001    0.000    0.001    0.000 callbacks.py:46(set_model)
      500    0.004    0.000    0.004    0.000 callbacks.py:50(on_epoch_begin)
      500    0.002    0.000    0.006    0.000 callbacks.py:64(on_epoch_end)
      500    0.005    0.000    0.068    0.000 callbacks.py:75(on_batch_begin)
      500    0.007    0.000    0.091    0.000 callbacks.py:96(on_batch_end)
      504    0.000    0.000    0.000    0.000 common.py:44(floatx)
      178    0.002    0.000    0.033    0.000 common_shapes.py:588(call_cpp_shape_fn)
      179    0.004    0.000    0.030    0.000 common_shapes.py:650(_call_cpp_shape_fn_impl)
      318    0.002    0.000    0.007    0.000 common_shapes.py:656(tensor_to_inference_result)
      179    0.001    0.000    0.008    0.000 common_shapes.py:664(<listcomp>)
      179    0.000    0.000    0.000    0.000 common_shapes.py:666(<listcomp>)
      179    0.000    0.000    0.000    0.000 common_shapes.py:674(<listcomp>)
      179    0.001    0.000    0.001    0.000 common_shapes.py:703(<listcomp>)
      179    0.000    0.000    0.000    0.000 common_shapes.py:706(<listcomp>)
      179    0.000    0.000    0.000    0.000 common_shapes.py:708(<listcomp>)
  1340591    1.251    0.000    2.276    0.000 compat.py:46(as_bytes)
      373    0.000    0.000    0.000    0.000 compat.py:68(as_text)
       34    0.001    0.000    0.016    0.000 constant_op.py:129(constant)
       14    0.000    0.000    0.006    0.000 constant_op.py:226(_constant_tensor_conversion_function)
      277    0.000    0.000    0.000    0.000 context.py:144(in_graph_mode)
   334988    0.286    0.000    0.286    0.000 context.py:148(in_eager_mode)
   335261    0.152    0.000    0.152    0.000 context.py:307(context)
       99    0.000    0.000    0.000    0.000 context.py:322(in_graph_mode)
   334392    0.458    0.000    0.895    0.000 context.py:327(in_eager_mode)
   669679    0.841    0.000    3.025    0.000 contextlib.py:157(helper)
   669679    1.828    0.000    2.184    0.000 contextlib.py:59(__init__)
669679/669607    0.402    0.000    1.628    0.000 contextlib.py:79(__enter__)
669679/669607    1.414    0.000    3.089    0.000 contextlib.py:85(__exit__)
        1    0.000    0.000    0.000    0.000 control_flow_ops.py:1291(MaybeCreateControlFlowState)
       41    0.000    0.000    0.000    0.000 control_flow_ops.py:1319(IsLoopExit)
        3    0.000    0.000    0.002    0.001 control_flow_ops.py:2897(_GroupControlDeps)
        4    0.000    0.000    0.002    0.001 control_flow_ops.py:2907(group)
      178    0.001    0.000    0.003    0.000 copy.py:132(deepcopy)
      178    0.000    0.000    0.000    0.000 copy.py:252(_keep_alive)
        3    0.000    0.000    0.000    0.000 copy.py:268(_reconstruct)
      503    0.001    0.000    0.002    0.000 copy.py:66(copy)
        3    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
        1    0.000    0.000    0.000    0.000 copyreg.py:96(_slotnames)
     1000    0.001    0.000    0.002    0.000 core.py:6192(isMaskedArray)
        6    0.000    0.000    0.000    0.000 device.py:106(replica)
        6    0.000    0.000    0.000    0.000 device.py:110(replica)
        6    0.000    0.000    0.000    0.000 device.py:117(task)
        6    0.000    0.000    0.000    0.000 device.py:121(task)
        6    0.000    0.000    0.000    0.000 device.py:128(parse_from_string)
        6    0.000    0.000    0.000    0.000 device.py:146(<listcomp>)
        3    0.000    0.000    0.000    0.000 device.py:175(merge_from)
        3    0.000    0.000    0.000    0.000 device.py:192(to_string)
        6    0.000    0.000    0.000    0.000 device.py:213(from_string)
        3    0.000    0.000    0.000    0.000 device.py:255(merge_device)
        3    0.000    0.000    0.000    0.000 device.py:283(_device_function)
        6    0.000    0.000    0.000    0.000 device.py:65(__init__)
        6    0.000    0.000    0.000    0.000 device.py:88(_clear)
        6    0.000    0.000    0.000    0.000 device.py:95(job)
        6    0.000    0.000    0.000    0.000 device.py:99(job)
       33    0.000    0.000    0.000    0.000 dtypes.py:115(is_numpy_compatible)
   335447    0.283    0.000    0.283    0.000 dtypes.py:123(as_numpy_dtype)
     1941    0.000    0.000    0.000    0.000 dtypes.py:128(as_datatype_enum)
       11    0.000    0.000    0.000    0.000 dtypes.py:144(is_floating)
        1    0.000    0.000    0.000    0.000 dtypes.py:150(is_complex)
      506    0.001    0.000    0.002    0.000 dtypes.py:235(is_compatible_with)
      721    0.001    0.000    0.001    0.000 dtypes.py:258(__eq__)
      172    0.000    0.000    0.000    0.000 dtypes.py:268(__ne__)
       64    0.000    0.000    0.000    0.000 dtypes.py:286(__hash__)
     2101    0.002    0.000    0.002    0.000 dtypes.py:551(as_dtype)
     1259    0.000    0.000    0.000    0.000 dtypes.py:83(_is_ref_dtype)
       17    0.000    0.000    0.000    0.000 dtypes.py:88(_as_ref)
     1192    0.001    0.000    0.001    0.000 dtypes.py:96(base_dtype)
   334565    0.676    0.000    1.755    0.000 errors_impl.py:463(__enter__)
   334565    2.252    0.000    3.954    0.000 errors_impl.py:467(__exit__)
       10    0.000    0.000    0.000    0.000 execute.py:110(make_str)
       47    0.000    0.000    0.000    0.000 execute.py:117(make_bool)
       20    0.000    0.000    0.000    0.000 execute.py:124(make_type)
        4    0.000    0.000    0.000    0.000 execute.py:134(make_shape)
      140    0.000    0.000    0.000    0.000 execute.py:86(record_gradient)
       38    0.000    0.000    0.001    0.000 fromnumeric.py:2408(prod)
     1000    0.005    0.000    0.034    0.000 fromnumeric.py:2806(mean)
       24    0.000    0.000    0.000    0.000 fromnumeric.py:357(repeat)
       24    0.000    0.000    0.000    0.000 fromnumeric.py:55(_wrapfunc)
     1000    0.003    0.000    0.017    0.000 fromnumeric.py:553(partition)
     1000    0.006    0.000    0.124    0.000 function_base.py:3966(_ureduce)
     1000    0.004    0.000    0.128    0.000 function_base.py:4020(median)
     1000    0.018    0.000    0.098    0.000 function_base.py:4108(_median)
      600    0.002    0.000    0.003    0.000 functools.py:44(update_wrapper)
      600    0.000    0.000    0.000    0.000 functools.py:74(wraps)
   509040    0.171    0.000    0.171    0.000 game.py:105(get_points)
   102008    0.056    0.000    0.056    0.000 game.py:115(__init__)
   460722    0.343    0.000    0.613    0.000 game.py:121(get_hand_codes)
   460722    0.271    0.000    0.271    0.000 game.py:122(<listcomp>)
   332372    0.174    0.000    0.174    0.000 game.py:124(get_card_from_hand)
   255520    0.521    0.000    0.678    0.000 game.py:130(play)
   384180    0.541    0.000    1.689    0.000 game.py:136(get_legal_moves)
   190200    0.147    0.000    0.147    0.000 game.py:155(<listcomp>)
    25452    0.227    0.000    2.665    0.000 game.py:17(__init__)
   127760    0.383    0.000    1.254    0.000 game.py:173(get_lowest_playable_card)
    51104    0.320    0.000    0.599    0.000 game.py:182(sort_hand)
    51104    0.041    0.000    0.041    0.000 game.py:183(<listcomp>)
    25552    0.052    0.000    2.237    0.000 game.py:190(set_up_game)
   127760    0.218    0.000    1.411    0.000 game.py:196(start_trick)
   127760    0.623    0.000    3.327    0.000 game.py:204(finish_trick)
    25552    0.275    0.000    1.527    0.000 game.py:218(shuffle_and_deal_cards)
    25552    0.052    0.000    0.082    0.000 game.py:220(<listcomp>)
    25552    0.019    0.000    0.019    0.000 game.py:221(<listcomp>)
    51004    0.143    0.000    1.241    0.000 game.py:233(set_first_lead)
    25452    0.037    0.000    1.217    0.000 game.py:242(create_deck)
    25452    0.176    0.000    1.180    0.000 game.py:244(<listcomp>)
   114721    1.322    0.000    1.485    0.000 game.py:247(get_lowest_card)
   114721    0.048    0.000    0.048    0.000 game.py:250(<listcomp>)
   127760    0.109    0.000    0.152    0.000 game.py:266(put_players_in_turn_order)
   511940    0.281    0.000    0.281    0.000 game.py:272(get_player)
   255520    0.453    0.000    0.774    0.000 game.py:279(split_players)
   255520    0.278    0.000    1.769    0.000 game.py:288(play_trick_for_players)
   127760    0.075    0.000    0.075    0.000 game.py:304(update_hearts_broken)
   127760    0.489    0.000    0.645    0.000 game.py:312(give_trick_points)
   127760    0.075    0.000    0.075    0.000 game.py:321(<listcomp>)
    25552    0.027    0.000    0.039    0.000 game.py:330(reset_player_order)
   334376    0.701    0.000    3.848    0.000 game.py:343(get_ordered_deck_codes)
  3343760    0.595    0.000    0.595    0.000 game.py:344(<lambda>)
   334376    0.460    0.000    0.460    0.000 game.py:345(<listcomp>)
      102    0.000    0.000    0.001    0.000 game.py:374(get_percentage_points)
        1    0.000    0.000    0.000    0.000 game.py:381(show_final_scores)
    25452    0.515    0.000    3.201    0.000 game.py:48(set_hands)
    25452    0.042    0.000    0.069    0.000 game.py:59(<listcomp>)
      100    0.000    0.000    0.001    0.000 game.py:71(update_points_won)
      100    0.000    0.000    0.000    0.000 game.py:72(<listcomp>)
    50904    0.050    0.000    0.107    0.000 game.py:74(get_deck_codes)
    50904    0.057    0.000    0.057    0.000 game.py:75(<listcomp>)
    50904    0.829    0.000    2.335    0.000 game.py:77(get_unique_hand_codes)
    50904    0.989    0.000    0.989    0.000 game.py:81(<listcomp>)
    50904    0.384    0.000    0.384    0.000 game.py:82(<listcomp>)
   509040    0.979    0.000    1.862    0.000 game.py:88(__init__)
   509040    0.384    0.000    0.384    0.000 game.py:98(get_value)
        3    0.000    0.000    0.003    0.001 gen_array_ops.py:1742(fill)
        4    0.000    0.000    0.003    0.001 gen_array_ops.py:2058(identity)
       11    0.000    0.000    0.012    0.001 gen_array_ops.py:3866(reshape)
       13    0.000    0.000    0.007    0.001 gen_array_ops.py:4479(shape)
        4    0.000    0.000    0.003    0.001 gen_array_ops.py:513(_broadcast_gradient_args)
        3    0.000    0.000    0.003    0.001 gen_array_ops.py:5600(tile)
        4    0.000    0.000    0.002    0.000 gen_control_flow_ops.py:283(no_op)
        2    0.000    0.000    0.003    0.001 gen_data_flow_ops.py:580(dynamic_stitch)
        5    0.000    0.000    0.003    0.001 gen_math_ops.py:1646(_floor_div)
        6    0.000    0.000    0.004    0.001 gen_math_ops.py:166(add)
        2    0.000    0.000    0.001    0.001 gen_math_ops.py:1681(_floor_mod)
        4    0.000    0.000    0.003    0.001 gen_math_ops.py:2404(_mat_mul)
        5    0.000    0.000    0.006    0.001 gen_math_ops.py:2505(maximum)
       15    0.000    0.000    0.009    0.001 gen_math_ops.py:2709(_mul)
        2    0.000    0.000    0.001    0.001 gen_math_ops.py:2744(_neg)
        6    0.000    0.000    0.005    0.001 gen_math_ops.py:2891(_prod)
        2    0.000    0.000    0.002    0.001 gen_math_ops.py:3229(_range)
        6    0.000    0.000    0.003    0.001 gen_math_ops.py:3323(_real_div)
        4    0.000    0.000    0.002    0.001 gen_math_ops.py:4619(_sub)
        8    0.000    0.000    0.013    0.002 gen_math_ops.py:4654(_sum)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:877(cast)
        1    0.000    0.000    0.001    0.001 gen_nn_ops.py:4193(_relu_grad)
        2    0.000    0.000    0.001    0.001 gen_nn_ops.py:473(bias_add_grad)
       12    0.000    0.000    0.008    0.001 gen_state_ops.py:223(is_variable_initialized)
       12    0.000    0.000    0.009    0.001 gen_state_ops.py:23(assign)
        1    0.000    0.000    0.001    0.001 gen_state_ops.py:72(assign_add)
        4    0.000    0.000    0.002    0.001 gen_state_ops.py:893(_variable_v2)
        4    0.000    0.000    0.000    0.000 generic_utils.py:234(has_arg)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:106(_MarkReachedOps)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:149(_PendingCount)
       19    0.000    0.000    0.000    0.000 gradients_impl.py:203(_AsList)
        1    0.000    0.000    0.002    0.002 gradients_impl.py:207(_DefaultGradYs)
       17    0.000    0.000    0.000    0.000 gradients_impl.py:265(_VerifyGeneratedGradients)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:281(_StopOps)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:310(<genexpr>)
       44    0.000    0.000    0.000    0.000 gradients_impl.py:314(_maybe_colocate_with)
       17    0.000    0.000    0.092    0.005 gradients_impl.py:338(_MaybeCompile)
        1    0.001    0.001    0.100    0.100 gradients_impl.py:375(gradients)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:467(<listcomp>)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:485(<listcomp>)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:486(<listcomp>)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:487(<listcomp>)
       42    0.000    0.000    0.000    0.000 gradients_impl.py:541(<genexpr>)
       17    0.000    0.000    0.092    0.005 gradients_impl.py:581(<lambda>)
        1    0.000    0.000    0.000    0.000 gradients_impl.py:619(<listcomp>)
       21    0.000    0.000    0.000    0.000 gradients_impl.py:634(_UpdatePendingAndEnqueueReady)
       26    0.000    0.000    0.000    0.000 gradients_impl.py:674(_SetGrad)
       26    0.000    0.000    0.000    0.000 gradients_impl.py:679(<listcomp>)
        4    0.000    0.000    0.000    0.000 gradients_impl.py:689(_GetGrad)
       21    0.000    0.000    0.000    0.000 gradients_impl.py:701(_GetGrads)
       17    0.000    0.000    0.001    0.000 gradients_impl.py:729(_LogOpGradients)
       45    0.000    0.000    0.000    0.000 gradients_impl.py:733(_FilterGrad)
       17    0.000    0.000    0.000    0.000 gradients_impl.py:742(<listcomp>)
       17    0.000    0.000    0.000    0.000 gradients_impl.py:744(<listcomp>)
       21    0.000    0.000    0.000    0.000 gradients_impl.py:791(_AggregatedGrads)
       21    0.000    0.000    0.000    0.000 gradients_impl.py:829(<listcomp>)
      100    0.000    0.000    0.000    0.000 hearts.py:118(<listcomp>)
      100    0.000    0.000    0.000    0.000 hearts.py:121(<listcomp>)
      101    0.840    0.008  219.462    2.173 hearts.py:204(test_model_3)
    25452    0.038    0.000    0.064    0.000 hearts.py:210(<listcomp>)
    25452    0.899    0.000  218.557    0.009 hearts.py:215(run_single_greedy_hand)
    25452    0.015    0.000    0.015    0.000 hearts.py:229(<listcomp>)
        1    0.010    0.010  222.467  222.467 hearts.py:26(run_game)
        4    0.000    0.000    0.000    0.000 init_ops.py:189(__init__)
        4    0.000    0.000    0.002    0.000 init_ops.py:194(__call__)
        8    0.000    0.000    0.000    0.000 inspect.py:159(isfunction)
        4    0.000    0.000    0.000    0.000 inspect.py:2092(_signature_from_function)
        4    0.000    0.000    0.000    0.000 inspect.py:2173(_signature_from_callable)
       22    0.000    0.000    0.000    0.000 inspect.py:2431(__init__)
       22    0.000    0.000    0.000    0.000 inspect.py:2480(name)
       12    0.000    0.000    0.000    0.000 inspect.py:2492(kind)
        4    0.000    0.000    0.000    0.000 inspect.py:2710(__init__)
       26    0.000    0.000    0.000    0.000 inspect.py:2755(<genexpr>)
        4    0.000    0.000    0.000    0.000 inspect.py:2779(from_callable)
        6    0.000    0.000    0.000    0.000 inspect.py:2785(parameters)
        4    0.000    0.000    0.000    0.000 inspect.py:3031(signature)
        4    0.000    0.000    0.000    0.000 inspect.py:485(unwrap)
        4    0.000    0.000    0.000    0.000 inspect.py:505(_is_wrapper)
        1    0.000    0.000    0.128    0.128 interfaces.py:23(wrapper)
        1    0.000    0.000    0.000    0.000 interfaces.py:636(get_updates_arg_preprocessing)
        1    0.000    0.000    0.002    0.002 math_grad.py:306(_SquareGrad)
        5    0.000    0.000    0.010    0.002 math_grad.py:33(_safe_shape_div)
        3    0.000    0.000    0.028    0.009 math_grad.py:38(_SumGrad)
        1    0.000    0.000    0.007    0.007 math_grad.py:720(_SubGrad)
        2    0.000    0.000    0.019    0.010 math_grad.py:733(_MulGrad)
        1    0.000    0.000    0.011    0.011 math_grad.py:797(_RealDivGrad)
        2    0.000    0.000    0.003    0.002 math_grad.py:912(_MatMulGrad)
        3    0.000    0.000    0.048    0.016 math_grad.py:95(_MeanGrad)
        5    0.000    0.000    0.004    0.001 math_ops.py:1075(floordiv)
       15    0.000    0.000    0.009    0.001 math_ops.py:1113(_mul_dispatch)
        2    0.000    0.000    0.004    0.002 math_ops.py:1164(range)
        8    0.000    0.000    0.000    0.000 math_ops.py:1225(<genexpr>)
        2    0.000    0.000    0.000    0.000 math_ops.py:1227(<listcomp>)
       14    0.000    0.000    0.002    0.000 math_ops.py:1238(_ReductionDims)
        8    0.000    0.000    0.013    0.002 math_ops.py:1261(reduce_sum)
        6    0.000    0.000    0.008    0.001 math_ops.py:1414(reduce_prod)
        4    0.000    0.000    0.003    0.001 math_ops.py:1729(matmul)
       11    0.000    0.000    0.000    0.000 math_ops.py:2293(conj)
        2    0.000    0.000    0.014    0.007 math_ops.py:2343(reduced_shape)
       13    0.000    0.000    0.002    0.000 math_ops.py:708(cast)
        4    0.000    0.000    0.000    0.000 math_ops.py:813(to_int32)
       34    0.000    0.000    0.023    0.001 math_ops.py:881(binary_op_wrapper)
        1    0.000    0.000    0.001    0.001 math_ops.py:907(r_binary_op_wrapper)
        3    0.000    0.000    0.002    0.001 math_ops.py:973(_truediv_python3)
      500    0.004    0.000    0.960    0.002 models.py:834(fit)
   333876    1.196    0.000  187.567    0.001 models.py:991(predict)
   335376    0.567    0.000    3.143    0.000 nest.py:114(is_sequence)
   334376    1.499    0.000    5.754    0.000 nest.py:226(flatten_dict_items)
        2    0.000    0.000    0.001    0.001 nn_grad.py:237(_BiasAddGrad)
        1    0.000    0.000    0.001    0.001 nn_grad.py:325(_ReluGrad)
     1000    0.003    0.000    0.004    0.000 numeric.py:1432(rollaxis)
      500    0.001    0.000    0.008    0.000 numeric.py:150(ones)
        9    0.000    0.000    0.000    0.000 numeric.py:2565(array_equal)
   335422    0.235    0.000    2.672    0.000 numeric.py:463(asarray)
     4000    0.002    0.000    0.022    0.000 numeric.py:534(asanyarray)
     2011    0.002    0.000    0.003    0.000 numerictypes.py:660(issubclass_)
     2011    0.005    0.000    0.008    0.000 numerictypes.py:728(issubdtype)
        2    0.000    0.000    0.000    0.000 op_def_library.py:147(_MakeInt)
       10    0.000    0.000    0.000    0.000 op_def_library.py:158(_MakeStr)
       47    0.000    0.000    0.000    0.000 op_def_library.py:165(_MakeBool)
      184    0.001    0.000    0.001    0.000 op_def_library.py:172(_MakeType)
        4    0.000    0.000    0.000    0.000 op_def_library.py:183(_MakeShape)
  338/288    0.000    0.000    0.001    0.000 op_def_library.py:248(_MaybeColocateWith)
      144    0.012    0.000    0.106    0.001 op_def_library.py:339(_apply_op_helper)
      166    0.000    0.000    0.000    0.000 op_def_library.py:37(_Attr)
      132    0.000    0.000    0.000    0.000 op_def_library.py:45(_AttrValue)
       12    0.000    0.000    0.000    0.000 op_def_library.py:457(<genexpr>)
        4    0.000    0.000    0.000    0.000 op_def_library.py:487(<listcomp>)
      348    0.001    0.000    0.001    0.000 op_def_library.py:52(_SatisfiesTypeConstraint)
      238    0.000    0.000    0.000    0.000 op_def_library.py:550(<listcomp>)
        4    0.000    0.000    0.000    0.000 op_def_library.py:572(<listcomp>)
      238    0.000    0.000    0.000    0.000 op_def_library.py:63(_IsListParameter)
       50    0.000    0.000    0.000    0.000 op_def_library.py:638(<genexpr>)
       17    0.000    0.000    0.000    0.000 op_def_library.py:772(<listcomp>)
      144    0.000    0.000    0.000    0.000 op_def_library.py:781(<listcomp>)
      323    0.000    0.000    0.000    0.000 op_def_library.py:79(_IsListValue)
      144    0.000    0.000    0.001    0.000 op_def_library.py:83(_Flatten)
      144    0.000    0.000    0.000    0.000 op_def_library.py:86(<listcomp>)
      144    0.000    0.000    0.000    0.000 op_def_library.py:88(<listcomp>)
       35    0.000    0.000    0.000    0.000 ops.py:1051(internal_convert_to_tensor_or_indexed_slices)
        3    0.000    0.000    0.000    0.000 ops.py:1086(internal_convert_n_to_tensor_or_indexed_slices)
  1004794    0.554    0.000    1.935    0.000 ops.py:109(_as_graph_element)
        2    0.000    0.000    0.000    0.000 ops.py:1128(convert_n_to_tensor_or_indexed_slices)
        1    0.000    0.000    0.000    0.000 ops.py:128(is_dense_tensor_like)
        3    0.000    0.000    0.000    0.000 ops.py:1305(_device_string)
      178    0.003    0.000    0.005    0.000 ops.py:1312(_NodeDef)
      178    0.003    0.000    0.022    0.000 ops.py:1367(__init__)
      178    0.000    0.000    0.002    0.000 ops.py:1439(<listcomp>)
       34    0.000    0.000    0.000    0.000 ops.py:1443(<listcomp>)
      386    0.000    0.000    0.001    0.000 ops.py:1446(<genexpr>)
      196    0.001    0.000    0.002    0.000 ops.py:1584(colocation_groups)
       47    0.000    0.000    0.000    0.000 ops.py:1595(<listcomp>)
        4    0.000    0.000    0.000    0.000 ops.py:1607(_get_control_flow_context)
  2682017    3.355    0.000    3.355    0.000 ops.py:1623(name)
      808    0.000    0.000    0.000    0.000 ops.py:1634(_id)
      220    0.000    0.000    0.000    0.000 ops.py:1639(device)
        3    0.000    0.000    0.000    0.000 ops.py:1702(_set_device)
      178    0.000    0.000    0.000    0.000 ops.py:172(uid)
      178    0.001    0.000    0.002    0.000 ops.py:1824(_recompute_node_def)
      178    0.000    0.000    0.001    0.000 ops.py:1827(<listcomp>)
        5    0.000    0.000    0.000    0.000 ops.py:1831(<listcomp>)
     1025    0.000    0.000    0.000    0.000 ops.py:1839(outputs)
      556    0.000    0.000    0.000    0.000 ops.py:1849(__init__)
      271    0.000    0.000    0.000    0.000 ops.py:1852(__iter__)
       21    0.000    0.000    0.000    0.000 ops.py:1855(__len__)
       17    0.000    0.000    0.000    0.000 ops.py:1858(__bool__)
      107    0.000    0.000    0.000    0.000 ops.py:1864(__getitem__)
      556    0.001    0.000    0.001    0.000 ops.py:1869(inputs)
   670734    0.897    0.000    0.897    0.000 ops.py:1925(type)
  1005436    0.336    0.000    0.336    0.000 ops.py:1942(graph)
      844    0.000    0.000    0.000    0.000 ops.py:1947(node_def)
      398    0.004    0.000    0.005    0.000 ops.py:1989(get_attr)
       17    0.000    0.000    0.001    0.000 ops.py:2126(get_gradient_function)
      178    0.000    0.000    0.033    0.000 ops.py:2158(call_with_requiring)
      178    0.002    0.000    0.039    0.000 ops.py:2199(set_shapes_for_outputs)
      226    0.000    0.000    0.000    0.000 ops.py:2368(_name_from_scope_name)
      178    0.006    0.000    0.007    0.000 ops.py:2530(_extract_stack)
     4163    0.000    0.000    0.000    0.000 ops.py:2566(_extract_frame_info)
      542    0.000    0.000    0.000    0.000 ops.py:2570(_check_not_finalized)
      178    0.001    0.000    0.002    0.000 ops.py:2579(_add_op)
      178    0.001    0.000    0.002    0.000 ops.py:260(__init__)
      178    0.000    0.000    0.000    0.000 ops.py:2605(_c_graph)
   668760    0.772    0.000    0.772    0.000 ops.py:2611(version)
      179    0.000    0.000    0.000    0.000 ops.py:2627(graph_def_versions)
      182    0.000    0.000    0.000    0.000 ops.py:2675(_get_control_flow_context)
        8    0.000    0.000    0.000    0.000 ops.py:2683(_set_control_flow_context)
        4    0.001    0.000    0.004    0.001 ops.py:2691(_as_graph_def)
       21    0.000    0.000    0.000    0.000 ops.py:2776(_is_function)
      400    0.000    0.000    0.000    0.000 ops.py:2847(building_function)
      178    0.007    0.000    0.081    0.000 ops.py:2853(create_op)
  1340905    0.247    0.000    0.247    0.000 ops.py:287(op)
   336326    0.123    0.000    0.123    0.000 ops.py:292(dtype)
   670845    0.724    0.000    0.991    0.000 ops.py:297(graph)
  1004667    1.670    0.000    7.567    0.000 ops.py:3002(as_graph_element)
  1005682    2.428    0.000    5.145    0.000 ops.py:302(name)
  1004667    2.393    0.000    5.897    0.000 ops.py:3037(_as_graph_element_locked)
        9    0.000    0.000    0.000    0.000 ops.py:309(device)
   335818    0.101    0.000    0.101    0.000 ops.py:314(shape)
      178    0.001    0.000    0.001    0.000 ops.py:3226(_next_id)
        3    0.000    0.000    0.000    0.000 ops.py:3233(_last_id)
   669156    1.064    0.000    4.088    0.000 ops.py:3237(as_default)
        8    0.000    0.000    0.000    0.000 ops.py:3277(add_to_collection)
        4    0.000    0.000    0.000    0.000 ops.py:3296(add_to_collections)
   334376    1.606    0.000    3.042    0.000 ops.py:3343(get_collection)
       34    0.000    0.000    0.000    0.000 ops.py:3397(_original_op)
      512    0.001    0.000    0.003    0.000 ops.py:3423(name_scope)
      208    0.001    0.000    0.001    0.000 ops.py:3535(unique_name)
      112    0.000    0.000    0.000    0.000 ops.py:3597(colocate_with)
        8    0.000    0.000    0.000    0.000 ops.py:360(_shape_as_list)
        8    0.000    0.000    0.000    0.000 ops.py:362(<listcomp>)
        8    0.000    0.000    0.000    0.000 ops.py:366(_shape_tuple)
        6    0.000    0.000    0.000    0.000 ops.py:3671(device)
   335818    0.294    0.000    0.395    0.000 ops.py:372(get_shape)
      178    0.000    0.000    0.000    0.000 ops.py:3743(_apply_device_functions)
      203    0.000    0.000    0.003    0.000 ops.py:376(set_shape)
       10    0.000    0.000    0.000    0.000 ops.py:3812(__init__)
       10    0.000    0.000    0.000    0.000 ops.py:3847(__enter__)
       10    0.000    0.000    0.000    0.000 ops.py:3857(__exit__)
       11    0.000    0.000    0.000    0.000 ops.py:3865(control_inputs)
       20    0.000    0.000    0.000    0.000 ops.py:3869(add_op)
       13    0.000    0.000    0.000    0.000 ops.py:3872(op_in_group)
       10    0.000    0.000    0.000    0.000 ops.py:3875(_push_control_dependencies_controller)
       10    0.000    0.000    0.000    0.000 ops.py:3878(_pop_control_dependencies_controller)
        6    0.000    0.000    0.000    0.000 ops.py:3882(_current_control_dependencies)
      178    0.001    0.000    0.001    0.000 ops.py:3889(_control_dependencies_for_inputs)
      178    0.000    0.000    0.000    0.000 ops.py:3907(<listcomp>)
       10    0.000    0.000    0.000    0.000 ops.py:3921(<listcomp>)
      178    0.000    0.000    0.000    0.000 ops.py:3924(_record_op_seen_by_control_dependencies)
       10    0.000    0.000    0.000    0.000 ops.py:3933(control_dependencies)
       30    0.000    0.000    0.000    0.000 ops.py:409(value_index)
       33    0.000    0.000    0.000    0.000 ops.py:414(consumers)
      242    0.000    0.000    0.000    0.000 ops.py:422(_add_consumer)
       32    0.000    0.000    0.000    0.000 ops.py:4220(prevent_feeding)
   335376    0.574    0.000    0.778    0.000 ops.py:4224(is_feedable)
   669266    0.435    0.000    0.570    0.000 ops.py:4232(is_fetchable)
        3    0.000    0.000    0.000    0.000 ops.py:4242(device)
       56    0.000    0.000    0.001    0.000 ops.py:4277(colocate_with)
       10    0.000    0.000    0.000    0.000 ops.py:4287(control_dependencies)
  1338737    1.139    0.000    1.371    0.000 ops.py:4317(get_default)
  1338312    1.479    0.000    2.105    0.000 ops.py:4334(get_controller)
      242    0.000    0.000    0.001    0.000 ops.py:435(_as_node_def_input)
   334376    0.534    0.000    0.892    0.000 ops.py:4401(get_default_session)
  1004361    1.578    0.000    2.593    0.000 ops.py:4500(get_default)
        6    0.000    0.000    0.000    0.000 ops.py:4507(_GetGlobalDefaultGraph)
  1004361    0.839    0.000    3.431    0.000 ops.py:4542(get_default_graph)
      165    0.000    0.000    0.000    0.000 ops.py:4560(_assert_same_graph)
      400    0.002    0.000    0.005    0.000 ops.py:4575(_get_graph_from_inputs)
  3686240    1.478    0.000    2.092    0.000 ops.py:473(__hash__)
        4    0.000    0.000    0.000    0.000 ops.py:4798(add_to_collections)
   334376    0.507    0.000    4.834    0.000 ops.py:4831(get_collection)
      256    0.001    0.000    0.001    0.000 ops.py:4885(__init__)
      256    0.001    0.000    0.008    0.000 ops.py:4899(__enter__)
      256    0.000    0.000    0.002    0.000 ops.py:4934(__exit__)
   334384    0.407    0.000    1.303    0.000 ops.py:5058(_assert_collection_is_ok)
      297    0.000    0.000    0.001    0.000 ops.py:769(_TensorTensorConversionFunction)
       94    0.000    0.000    0.003    0.000 ops.py:786(convert_to_tensor)
      340    0.002    0.000    0.010    0.000 ops.py:843(internal_convert_to_tensor)
        4    0.000    0.000    0.000    0.000 ops.py:947(internal_convert_n_to_tensor)
        1    0.000    0.000    0.128    0.128 optimizers.py:154(get_updates)
        1    0.000    0.000    0.000    0.000 optimizers.py:164(<listcomp>)
        1    0.000    0.000    0.011    0.011 optimizers.py:165(<listcomp>)
        1    0.000    0.000    0.100    0.100 optimizers.py:72(get_gradients)
        1    0.000    0.000    0.000    0.000 os.py:664(__getitem__)
        1    0.000    0.000    0.000    0.000 os.py:742(encode)
        1    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:1199(TF_NewSessionOptions)
      500    0.000    0.000    0.000    0.000 q_learning.py:100(get_reward)
      500    0.018    0.000    1.942    0.004 q_learning.py:105(update_Q)
      400    0.001    0.000    0.001    0.000 q_learning.py:122(<listcomp>)
      400    0.001    0.000    0.001    0.000 q_learning.py:123(<listcomp>)
      400    0.002    0.000    0.625    0.002 q_learning.py:124(<listcomp>)
   334376    0.974    0.000   11.273    0.000 q_learning.py:176(get_NN_state)
   333876    0.795    0.000  199.616    0.001 q_learning.py:183(get_NN_output)
   334376    2.620    0.000    6.952    0.000 q_learning.py:188(state_str_to_array)
   127760    1.937    0.000  205.806    0.002 q_learning.py:28(get_player0_choice)
   127760    0.174    0.000    0.318    0.000 q_learning.py:36(<listcomp>)
   127760    0.163    0.000    0.416    0.000 q_learning.py:38(<listcomp>)
   127760    0.478    0.000  199.158    0.002 q_learning.py:44(<listcomp>)
   333876    0.145    0.000    0.145    0.000 q_learning.py:68(get_Q_key)
   333876    0.254    0.000    0.254    0.000 q_learning.py:73(get_Q_value)
   128260    0.767    0.000    1.533    0.000 q_learning.py:82(get_state_str)
   128260    0.041    0.000    0.041    0.000 q_learning.py:92(<listcomp>)
   128260    0.034    0.000    0.034    0.000 q_learning.py:97(<listcomp>)
   357728    0.559    0.000    0.846    0.000 random.py:222(_randbelow)
   127760    0.255    0.000    0.796    0.000 random.py:252(choice)
    25552    0.212    0.000    0.542    0.000 random.py:260(shuffle)
      373    0.001    0.000    0.001    0.000 registry.py:78(lookup)
   334380    9.397    0.000  135.469    0.000 session.py:1036(_run)
   335376    0.709    0.000    1.025    0.000 session.py:1038(_feed_fn)
   669266    0.287    0.000    0.287    0.000 session.py:124(<lambda>)
   335376    0.126    0.000    0.126    0.000 session.py:125(<lambda>)
   334380    2.540    0.000   58.567    0.000 session.py:1258(_do_run)
   669756    0.702    0.000    2.552    0.000 session.py:1286(<genexpr>)
   334380    2.463    0.000   49.570    0.000 session.py:1290(_run_fn)
   334380    0.497    0.000   50.067    0.000 session.py:1321(_do_call)
   334380    0.881    0.000    1.241    0.000 session.py:1338(_extend_graph)
   334380    1.208    0.000    2.771    0.000 session.py:1381(_update_with_movers)
        1    0.000    0.000    0.001    0.001 session.py:1461(__init__)
1003644/334380    2.627    0.000   16.445    0.000 session.py:215(for_fetch)
   669266    1.685    0.000    8.393    0.000 session.py:251(__init__)
   669266    0.143    0.000    0.143    0.000 session.py:284(unique_fetches)
   669266    0.516    0.000    0.691    0.000 session.py:287(build_results)
   334378    1.745    0.000    2.910    0.000 session.py:295(_uniquify_fetches)
   334378    0.905    0.000   15.790    0.000 session.py:334(__init__)
   334378    0.594    0.000   11.975    0.000 session.py:341(<listcomp>)
   334378    0.081    0.000    0.081    0.000 session.py:344(unique_fetches)
   334378    2.144    0.000    3.266    0.000 session.py:347(build_results)
   669264    0.330    0.000    0.330    0.000 session.py:351(<listcomp>)
   334380    5.162    0.000   28.677    0.000 session.py:401(__init__)
   334380    0.356    0.000    0.532    0.000 session.py:435(<listcomp>)
   669266    0.443    0.000    1.013    0.000 session.py:437(_assert_fetchable)
   334380    0.110    0.000    0.110    0.000 session.py:442(fetches)
   334380    0.083    0.000    0.083    0.000 session.py:450(targets)
   334380    3.252    0.000    8.161    0.000 session.py:458(build_results)
   668760    0.479    0.000    3.362    0.000 session.py:507(_name_list)
   668760    0.845    0.000    2.883    0.000 session.py:516(<listcomp>)
        1    0.000    0.000    0.001    0.001 session.py:559(__init__)
  1674884    0.439    0.000    0.439    0.000 session.py:708(graph)
   334380    1.684    0.000  137.153    0.000 session.py:781(run)
   335376    0.574    0.000    1.119    0.000 session_ops.py:253(_get_handle_feeder)
   335376    0.304    0.000    1.423    0.000 session_ops.py:273(_get_handle_mover)
   334588    0.444    0.000    0.676    0.000 six.py:586(iteritems)
        4    0.000    0.000    0.002    0.001 state_ops.py:110(variable_op_v2)
       12    0.000    0.000    0.008    0.001 state_ops.py:171(is_variable_initialized)
        1    0.000    0.000    0.001    0.001 state_ops.py:220(assign_add)
       12    0.000    0.000    0.009    0.001 state_ops.py:248(assign)
       53    0.000    0.000    0.000    0.000 tensor_shape.py:113(merge_with)
   670513    1.133    0.000    1.297    0.000 tensor_shape.py:27(__init__)
  1340889    0.944    0.000    2.467    0.000 tensor_shape.py:381(as_dimension)
   336039    1.028    0.000    4.266    0.000 tensor_shape.py:420(__init__)
      165    0.000    0.000    0.001    0.000 tensor_shape.py:442(<listcomp>)
   335501    0.452    0.000    2.584    0.000 tensor_shape.py:455(<listcomp>)
       17    0.000    0.000    0.000    0.000 tensor_shape.py:46(__eq__)
   670777    0.133    0.000    0.133    0.000 tensor_shape.py:468(dims)
   670954    0.312    0.000    0.422    0.000 tensor_shape.py:473(ndims)
       59    0.000    0.000    0.000    0.000 tensor_shape.py:501(__getitem__)
        2    0.000    0.000    0.000    0.000 tensor_shape.py:545(num_elements)
      222    0.000    0.000    0.003    0.000 tensor_shape.py:555(merge_with)
       43    0.000    0.000    0.000    0.000 tensor_shape.py:607(assert_same_rank)
       17    0.000    0.000    0.001    0.000 tensor_shape.py:635(with_rank)
   335376    1.931    0.000    8.647    0.000 tensor_shape.py:693(is_compatible_with)
   669443    0.118    0.000    0.118    0.000 tensor_shape.py:78(value)
       35    0.000    0.000    0.000    0.000 tensor_shape.py:785(is_fully_defined)
       66    0.000    0.000    0.000    0.000 tensor_shape.py:787(<genexpr>)
       15    0.000    0.000    0.000    0.000 tensor_shape.py:799(as_list)
       15    0.000    0.000    0.000    0.000 tensor_shape.py:810(<listcomp>)
      552    0.003    0.000    0.004    0.000 tensor_shape.py:812(as_proto)
      348    0.001    0.000    0.001    0.000 tensor_shape.py:818(<listcomp>)
       17    0.000    0.000    0.000    0.000 tensor_shape.py:823(__eq__)
   670305    0.750    0.000    1.203    0.000 tensor_shape.py:83(is_compatible_with)
   335700    0.594    0.000    4.961    0.000 tensor_shape.py:844(as_shape)
      201    0.000    0.000    0.001    0.000 tensor_shape.py:852(unknown_shape)
        5    0.000    0.000    0.000    0.000 tensor_shape.py:867(scalar)
       53    0.000    0.000    0.000    0.000 tensor_shape.py:99(assert_is_compatible_with)
       34    0.000    0.000    0.000    0.000 tensor_util.py:137(GetFromNumpyDTypeDict)
       34    0.000    0.000    0.000    0.000 tensor_util.py:145(GetNumpyAppendFn)
    30/28    0.000    0.000    0.000    0.000 tensor_util.py:170(_GetDenseDimensions)
       36    0.000    0.000    0.000    0.000 tensor_util.py:205(_FirstNotNone)
    18/16    0.000    0.000    0.000    0.000 tensor_util.py:234(_FilterInt)
        8    0.000    0.000    0.000    0.000 tensor_util.py:236(<listcomp>)
        6    0.000    0.000    0.000    0.000 tensor_util.py:241(_FilterFloat)
        6    0.000    0.000    0.000    0.000 tensor_util.py:268(_FilterNotTensor)
       28    0.000    0.000    0.000    0.000 tensor_util.py:295(_AssertCompatible)
       28    0.000    0.000    0.000    0.000 tensor_util.py:297(<listcomp>)
       34    0.001    0.000    0.005    0.000 tensor_util.py:306(make_tensor_proto)
        4    0.000    0.000    0.000    0.000 tensor_util.py:426(<listcomp>)
       30    0.000    0.000    0.002    0.000 tensor_util.py:488(MakeNdarray)
       30    0.000    0.000    0.000    0.000 tensor_util.py:503(<listcomp>)
    56/50    0.000    0.000    0.003    0.000 tensor_util.py:606(_ConstantValue)
    56/50    0.000    0.000    0.003    0.000 tensor_util.py:714(constant_value)
       17    0.000    0.000    0.001    0.000 tensor_util.py:751(constant_value_as_shape)
        2    0.000    0.000    0.000    0.000 tensor_util.py:845(<listcomp>)
   334376    3.632    0.000   16.363    0.000 tensorflow_backend.py:142(get_session)
        2    0.000    0.000    0.015    0.008 tensorflow_backend.py:182(<listcomp>)
        2    0.000    0.000    0.001    0.001 tensorflow_backend.py:2311(__init__)
   334376    3.989    0.000  158.441    0.000 tensorflow_backend.py:2343(__call__)
        2    0.000    0.000    0.001    0.001 tensorflow_backend.py:2361(function)
        1    0.000    0.000    0.100    0.100 tensorflow_backend.py:2384(gradients)
   335376    0.313    0.000    0.440    0.000 tensorflow_backend.py:294(is_sparse)
        4    0.000    0.000    0.010    0.002 tensorflow_backend.py:346(variable)
        8    0.000    0.000    0.000    0.000 tensorflow_backend.py:549(int_shape)
        4    0.000    0.000    0.011    0.003 tensorflow_backend.py:656(zeros)
        8    0.000    0.000    0.005    0.001 tensorflow_backend.py:935(update)
        1    0.000    0.000    0.001    0.001 tensorflow_backend.py:948(update_add)
       51    0.000    0.000    0.000    0.000 tf_logging.py:120(vlog)
       12    0.000    0.000    0.015    0.001 tf_should_use.py:106(wrapped)
       12    0.002    0.000    0.007    0.001 tf_should_use.py:31(_add_should_use_warning)
      600    0.000    0.000    0.000    0.000 tf_should_use.py:47(override_method)
       72    0.000    0.000    0.000    0.000 tf_should_use.py:48(fn)
       12    0.000    0.000    0.000    0.000 tf_should_use.py:52(TFShouldUseWarningWrapper)
       12    0.000    0.000    0.000    0.000 tf_should_use.py:55(__init__)
  252/168    0.000    0.000    0.000    0.000 tf_should_use.py:61(__getattribute__)
        6    0.000    0.000    0.000    0.000 topology.py:1146(get_updates_for)
        1    0.000    0.000    0.000    0.000 topology.py:1873(updates)
   334378    0.400    0.000    0.657    0.000 topology.py:1930(uses_learning_phase)
   334378    0.195    0.000    0.195    0.000 topology.py:1932(<listcomp>)
   334376    0.565    0.000    2.307    0.000 topology.py:1934(stateful)
   334376    0.458    0.000    1.608    0.000 topology.py:1936(<listcomp>)
        1    0.000    0.000    0.000    0.000 topology.py:1943(state_updates)
      500    0.002    0.000    0.003    0.000 topology.py:1961(trainable_weights)
        3    0.000    0.000    0.000    0.000 topology.py:2754(_to_list)
        3    0.000    0.000    0.000    0.000 topology.py:2771(_object_list_uid)
        3    0.000    0.000    0.000    0.000 topology.py:2773(<listcomp>)
        3    0.000    0.000    0.000    0.000 topology.py:314(_node_key)
        3    0.000    0.000    0.000    0.000 topology.py:333(updates)
   334376    0.205    0.000    0.205    0.000 topology.py:337(built)
     1500    0.001    0.000    0.001    0.000 topology.py:345(trainable_weights)
   333876    0.226    0.000    0.333    0.000 training.py:1014(_make_predict_function)
   334376    0.367    0.000    0.485    0.000 training.py:1031(_check_num_samples)
      500    0.024    0.000    0.758    0.002 training.py:1070(_fit_loop)
   333876    6.604    0.000  175.804    0.001 training.py:1239(_predict_loop)
      500    0.009    0.000    0.049    0.000 training.py:1390(_standardize_user_data)
      500    0.001    0.000    0.013    0.000 training.py:1423(<listcomp>)
      500    0.002    0.000    0.002    0.000 training.py:1439(_get_deduped_metrics_names)
      500    0.009    0.000    0.956    0.002 training.py:1453(fit)
     1000    0.001    0.000    0.001    0.000 training.py:157(_standardize_sample_or_class_weights)
     1000    0.000    0.000    0.000    0.000 training.py:173(<listcomp>)
   333876    2.887    0.000  186.166    0.001 training.py:1736(predict)
      500    0.000    0.000    0.001    0.000 training.py:204(_standardize_class_weights)
      500    0.001    0.000    0.002    0.000 training.py:210(_standardize_sample_weights)
      500    0.003    0.000    0.008    0.000 training.py:216(_check_array_lengths)
     1500    0.003    0.000    0.004    0.000 training.py:227(set_of_lengths)
     1500    0.001    0.000    0.001    0.000 training.py:233(<listcomp>)
      500    0.003    0.000    0.003    0.000 training.py:262(_check_loss_and_target_compatibility)
   334876    3.474    0.000    4.192    0.000 training.py:29(_standardize_input_data)
   334376    0.658    0.000    1.251    0.000 training.py:373(_make_batches)
   334376    0.332    0.000    0.593    0.000 training.py:384(<listcomp>)
   334376    0.854    0.000    6.518    0.000 training.py:388(_slice_arrays)
   334376    5.035    0.000    5.035    0.000 training.py:415(<listcomp>)
      500    0.003    0.000    0.012    0.000 training.py:481(_standardize_weights)
      500    0.001    0.000    0.005    0.000 training.py:958(_check_trainable_weights_consistency)
      500    0.001    0.000    0.135    0.000 training.py:977(_make_train_function)
     1000    0.014    0.000    0.021    0.000 utils.py:1119(_median_nancheck)
   334376    0.547    0.000    5.381    0.000 variables.py:1225(global_variables)
        4    0.000    0.000    0.010    0.002 variables.py:123(__init__)
        2    0.000    0.000    0.001    0.001 variables.py:1359(variables_initializer)
        2    0.000    0.000    0.000    0.000 variables.py:1380(<listcomp>)
       12    0.000    0.000    0.008    0.001 variables.py:1429(is_variable_initialized)
        4    0.000    0.000    0.010    0.002 variables.py:220(_init_from_args)
       29    0.000    0.000    0.000    0.000 variables.py:399(_as_graph_element)
       12    0.000    0.000    0.000    0.000 variables.py:403(_AsTensor)
        4    0.000    0.000    0.000    0.000 variables.py:425(value)
       25    0.000    0.000    0.000    0.000 variables.py:455(_ref)
        4    0.000    0.000    0.000    0.000 variables.py:550(constraint)
       29    0.000    0.000    0.000    0.000 variables.py:719(_TensorConversionFunction)
       12    0.000    0.000    0.008    0.001 variables.py:752(_run_op)
      8/4    0.000    0.000    0.000    0.000 variables.py:763(_build_initializer_expr)
       12    0.000    0.000    0.000    0.000 variables.py:872(initializer)
       25    0.000    0.000    0.000    0.000 variables.py:882(dtype)
      249    0.001    0.000    0.001    0.000 {built-in method FromString}
        7    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x88a920}
      179    0.006    0.000    0.006    0.000 {built-in method _pywrap_tensorflow_internal.RunCppShapeInference}
      178    0.000    0.000    0.000    0.000 {built-in method _pywrap_tensorflow_internal.TFE_Py_UID}
        1    0.000    0.000    0.000    0.000 {built-in method _pywrap_tensorflow_internal.TF_DeleteSessionOptions}
   334565    0.407    0.000    0.407    0.000 {built-in method _pywrap_tensorflow_internal.TF_DeleteStatus}
        4    0.008    0.002    0.008    0.002 {built-in method _pywrap_tensorflow_internal.TF_ExtendGraph}
   334565    0.616    0.000    0.616    0.000 {built-in method _pywrap_tensorflow_internal.TF_GetCode}
        1    0.000    0.000    0.000    0.000 {built-in method _pywrap_tensorflow_internal.TF_NewDeprecatedSession}
   334565    0.579    0.000    0.579    0.000 {built-in method _pywrap_tensorflow_internal.TF_NewStatus}
   334380   40.160    0.000   40.160    0.000 {built-in method _pywrap_tensorflow_internal.TF_Run}
        1    0.000    0.000    0.000    0.000 {built-in method _pywrap_tensorflow_internal._TF_NewSessionOptions}
        1    0.000    0.000    0.000    0.000 {built-in method _pywrap_tensorflow_internal._TF_SetConfig}
        1    0.000    0.000    0.000    0.000 {built-in method _pywrap_tensorflow_internal._TF_SetTarget}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
      227    0.000    0.000    0.002    0.000 {built-in method builtins.all}
   668779    0.197    0.000    0.197    0.000 {built-in method builtins.any}
       68    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.dir}
        1    0.000    0.000  222.467  222.467 {built-in method builtins.exec}
  5694757    2.957    0.000    2.957    0.000 {built-in method builtins.getattr}
  3013443    2.025    0.000    2.025    0.000 {built-in method builtins.hasattr}
  3686781    0.614    0.000    0.614    0.000 {built-in method builtins.id}
 18433633    5.104    0.000    6.893    0.000 {built-in method builtins.isinstance}
6233/6217    0.002    0.000    0.002    0.000 {built-in method builtins.issubclass}
   670860    0.234    0.000    0.234    0.000 {built-in method builtins.iter}
7364168/7364147    1.233    0.000    1.233    0.000 {built-in method builtins.len}
   256500    0.912    0.000    0.912    0.000 {built-in method builtins.max}
   652259    0.397    0.000    0.397    0.000 {built-in method builtins.min}
1339358/1339214    0.793    0.000    2.902    0.000 {built-in method builtins.next}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
      102    0.001    0.000    0.001    0.000 {built-in method builtins.round}
     3600    0.001    0.000    0.001    0.000 {built-in method builtins.setattr}
   334529    2.092    0.000    2.687    0.000 {built-in method builtins.sorted}
   178966    0.107    0.000    0.107    0.000 {built-in method builtins.sum}
   334387    0.985    0.000    0.985    0.000 {built-in method numpy.core.multiarray.arange}
   673850    5.097    0.000    5.097    0.000 {built-in method numpy.core.multiarray.array}
      500    0.002    0.000    0.002    0.000 {built-in method numpy.core.multiarray.copyto}
      500    0.004    0.000    0.004    0.000 {built-in method numpy.core.multiarray.empty}
        6    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.fromiter}
     1000    0.001    0.000    0.001    0.000 {built-in method numpy.core.multiarray.normalize_axis_index}
   333876    1.678    0.000    1.678    0.000 {built-in method numpy.core.multiarray.zeros}
      178    0.000    0.000    0.000    0.000 {built-in method sys.exc_info}
     3000    0.002    0.000    0.002    0.000 {built-in method time.time}
      610    0.003    0.000    0.003    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
      824    0.002    0.000    0.002    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
     2765    0.001    0.000    0.001    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
      698    0.005    0.000    0.005    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
      364    0.000    0.000    0.000    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
      178    0.001    0.000    0.001    0.000 {method '__deepcopy__' of 'google.protobuf.pyext._message.CMessage' objects}
        3    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
        8    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
      102    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        7    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
     1049    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
  9017711    1.472    0.000    1.472    0.000 {method 'append' of 'list' objects}
       12    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
   357728    0.071    0.000    0.071    0.000 {method 'bit_length' of 'int' objects}
   334376    0.129    0.000    0.129    0.000 {method 'copy' of 'dict' objects}
     1000    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
  1340580    0.755    0.000    0.755    0.000 {method 'encode' of 'str' objects}
       35    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
      254    0.002    0.000    0.002    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
      183    0.000    0.000    0.000    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
      592    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
     1000    0.002    0.000    0.002    0.000 {method 'flatten' of 'numpy.ndarray' objects}
      100    0.002    0.000    0.002    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
      103    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
  2011930    1.209    0.000    1.761    0.000 {method 'get' of 'dict' objects}
        5    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
   633573    0.217    0.000    0.217    0.000 {method 'getrandbits' of '_random.Random' objects}
  1591383    0.532    0.000    0.532    0.000 {method 'index' of 'list' objects}
       22    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
  1338905    0.251    0.000    0.251    0.000 {method 'items' of 'dict' objects}
   256557    0.101    0.000    0.101    0.000 {method 'join' of 'str' objects}
      434    0.001    0.000    0.001    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
     1000    0.011    0.000    0.011    0.000 {method 'partition' of 'numpy.ndarray' objects}
      327    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
  1331894    0.605    0.000    0.605    0.000 {method 'pop' of 'list' objects}
       87    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
   127760    0.093    0.000    0.093    0.000 {method 'random' of '_random.Random' objects}
       34    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     1045    0.014    0.000    0.014    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        9    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       24    0.000    0.000    0.000    0.000 {method 'repeat' of 'numpy.ndarray' objects}
       17    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
   334406    0.656    0.000    0.656    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    51082    0.016    0.000    0.016    0.000 {method 'reverse' of 'list' objects}
       17    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
     1000    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      500    0.017    0.000    0.019    0.000 {method 'shuffle' of 'mtrand.RandomState' objects}
   334388    0.430    0.000    0.430    0.000 {method 'split' of 'str' objects}
       47    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
      247    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
   334376    0.283    0.000    0.283    0.000 {method 'tolist' of 'numpy.ndarray' objects}
      603    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
       12    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
      144    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'values' of 'mappingproxy' objects}
      100    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        6    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
       27    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
        1    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}

